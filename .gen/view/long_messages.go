//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var LongMessages = newLongMessagesTable("", "long_messages", "")

type longMessagesTable struct {
	sqlite.Table

	// Columns
	ID            sqlite.ColumnString
	Text          sqlite.ColumnString
	DiscordMember sqlite.ColumnString
	DateSent      sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type LongMessagesTable struct {
	longMessagesTable

	EXCLUDED longMessagesTable
}

// AS creates new LongMessagesTable with assigned alias
func (a LongMessagesTable) AS(alias string) *LongMessagesTable {
	return newLongMessagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LongMessagesTable with assigned schema name
func (a LongMessagesTable) FromSchema(schemaName string) *LongMessagesTable {
	return newLongMessagesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LongMessagesTable with assigned table prefix
func (a LongMessagesTable) WithPrefix(prefix string) *LongMessagesTable {
	return newLongMessagesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LongMessagesTable with assigned table suffix
func (a LongMessagesTable) WithSuffix(suffix string) *LongMessagesTable {
	return newLongMessagesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLongMessagesTable(schemaName, tableName, alias string) *LongMessagesTable {
	return &LongMessagesTable{
		longMessagesTable: newLongMessagesTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newLongMessagesTableImpl("", "excluded", ""),
	}
}

func newLongMessagesTableImpl(schemaName, tableName, alias string) longMessagesTable {
	var (
		IDColumn            = sqlite.StringColumn("id")
		TextColumn          = sqlite.StringColumn("text")
		DiscordMemberColumn = sqlite.StringColumn("discord_member")
		DateSentColumn      = sqlite.StringColumn("date_sent")
		allColumns          = sqlite.ColumnList{IDColumn, TextColumn, DiscordMemberColumn, DateSentColumn}
		mutableColumns      = sqlite.ColumnList{IDColumn, TextColumn, DiscordMemberColumn, DateSentColumn}
	)

	return longMessagesTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		Text:          TextColumn,
		DiscordMember: DiscordMemberColumn,
		DateSent:      DateSentColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
