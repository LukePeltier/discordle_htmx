// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BlacklistsColumns holds the columns for the "blacklists" table.
	BlacklistsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bad", Type: field.TypeString, Unique: true},
	}
	// BlacklistsTable holds the schema information for the "blacklists" table.
	BlacklistsTable = &schema.Table{
		Name:       "blacklists",
		Columns:    BlacklistsColumns,
		PrimaryKey: []*schema.Column{BlacklistsColumns[0]},
	}
	// DiscordMembersColumns holds the columns for the "discord_members" table.
	DiscordMembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "nicknames", Type: field.TypeJSON},
		{Name: "discord_id", Type: field.TypeString},
		{Name: "blacklisted", Type: field.TypeBool, Default: false},
	}
	// DiscordMembersTable holds the schema information for the "discord_members" table.
	DiscordMembersTable = &schema.Table{
		Name:       "discord_members",
		Columns:    DiscordMembersColumns,
		PrimaryKey: []*schema.Column{DiscordMembersColumns[0]},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString},
		{Name: "date_sent", Type: field.TypeString},
		{Name: "discord_id", Type: field.TypeString},
		{Name: "discord_member_messages", Type: field.TypeInt, Nullable: true},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_discord_members_messages",
				Columns:    []*schema.Column{MessagesColumns[4]},
				RefColumns: []*schema.Column{DiscordMembersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MessageScoresColumns holds the columns for the "message_scores" table.
	MessageScoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "score", Type: field.TypeUint16},
		{Name: "message_score_message", Type: field.TypeInt, Nullable: true},
	}
	// MessageScoresTable holds the schema information for the "message_scores" table.
	MessageScoresTable = &schema.Table{
		Name:       "message_scores",
		Columns:    MessageScoresColumns,
		PrimaryKey: []*schema.Column{MessageScoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "message_scores_messages_message",
				Columns:    []*schema.Column{MessageScoresColumns[2]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BlacklistsTable,
		DiscordMembersTable,
		MessagesTable,
		MessageScoresTable,
	}
)

func init() {
	MessagesTable.ForeignKeys[0].RefTable = DiscordMembersTable
	MessageScoresTable.ForeignKeys[0].RefTable = MessagesTable
}
